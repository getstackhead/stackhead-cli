package ansible

import (
	"io/ioutil"
	"os"
	"path/filepath"
	"text/template"
)

// InventoryOptions is a configuration used during creation of the temporary inventory file
type InventoryOptions struct {
	IPAddress string
}

// IPAddress sets the corresponding inventory option
func IPAddress(ipAddress string) InventoryOption {
	return func(args *InventoryOptions) {
		args.IPAddress = ipAddress
	}
}

// InventoryOption is a single inventory setting
type InventoryOption func(*InventoryOptions)

// CreateInventoryFile creates a temporary inventory file with the given settings and returns an absolute file path.
// Note: make sure to remove the file when you don't need it anymore!
func CreateInventoryFile(options ...InventoryOption) (string, error) {
	opts := &InventoryOptions{}
	for _, setter := range options {
		setter(opts)
	}

	tmpFile, err := ioutil.TempFile("", "inventory")
	if err != nil {
		return "", err
	}

	filePath, err := filepath.Abs(tmpFile.Name())
	if err != nil {
		os.Remove(tmpFile.Name())
		return "", err
	}

	t, err := template.New("ansible_inventory").Parse(`# This file was generated by StackHead.
---
all:
  vars:
    ansible_user: root
    ansible_connection: ssh
  hosts:
    mackerel:
      ansible_host: {{ .IPAddress }}
`)

	if err = t.Execute(tmpFile, opts); err != nil {
		return "", err
	}

	// Close the file
	if err := tmpFile.Close(); err != nil {
		return "", err
	}

	return filePath, nil
}
